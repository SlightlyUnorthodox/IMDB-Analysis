x
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x <- 5
y <- 2
rbind (x)
rbind(x, y)
z <- rbind(x,y)
z
z <- cbind(x,y)
z
zz <- c(1,3)
data.frame(z,zz)
x
y
zz
z
x <- 2
x
rbind(2)
2
x
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
gdsit
gdist
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
a <- c("a","b","c")
b <- c(1,2,3)
data.frame(a,b)
a <- c(a,"b","c")
a
source('C:/Users/Dax/Dropbox/R/genDist.r')
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
head(x)
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
head(x)
plot(x)
hist(x)
?hist
ggplot(data = x)
library(ggplot2)
ggplot(data = x)
ggplot(data = x) + geom_bar(position = "fill")
ggplot(data = x,aes(x[1],x[3],x[4])) + geom_bar(position = "fill")
ggplot(data = x,aes(x[1],x[3])) + geom_bar(position = "fill")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
years <- c(1900,"to",1905)
years
years <- rbind(1900,"to",1905)
years
as.string(1900,"to",1905)
as.character(1900,"to",1905)
as.character(rbind(1900,"to",1905))
x <- 1900
y <- 1905
as.character(rbind(x,to,y))
as.character(rbind(x,"to",y)
)
as.character(c(x,"to",y))
paste(x,"to",y)
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
x
gender("Taylor",c(1900,1905))
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
ggplot(data = x,aes(x = years,y = c(proportion_male,proportion_male.1))) + geom_bar(position = "fill")
ggplot(data = x) + geom_bar(aes(x = years,y = proportion_male)) + geom_bar(aes(x = years,y = proportion_male.1)) + geom_bar(position = "fill")
g <- ggplot(data = x,aes(x = years, fill = drv))
g
g + geom_bar(position = "fill")
g <- ggplot(data = x,aes(x = years)) + geom_bar(position = "fill")
g
g <- ggplot(data = x,aes(x = years)) + geom_bar(position = "doge")
g <- ggplot(data = x,aes(x = years)) + geom_bar(position = "dodge")
g
g <- ggplot(data = x,aes(x = years,fill = proportion_male)) + geom_bar(position = "dodge")
g
g <- ggplot(data = x,aes(x = years,fill = proportion_male)) + geom_bar(position = "fill")
g
?fill
g <- ggplot(data = x,aes(x = years,fill = factor(proportion_male))) + geom_bar(position = "fill")
g
g <- ggplot(data = x,aes(x = years,fill = factor(proportion_male))) + geom_bar(position = "stack")
g
x
plot(x)
hist(data = x, x = years, y = proportion_male)
g <- ggplot(data = x,aes(x = years,y = proportion_male)) + geom_bar(position = "stack")
g
g <- ggplot(data = x,aes(x = years,y = proportion_male))
g
source('C:/Users/Dax/Dropbox/R/genDist.r')
source('C:/Users/Dax/Dropbox/R/genDist.r')
?gender
source('C:/Users/Dax/Dropbox/R/genDist.r')
x <- genDist("Taylor")
pip install rpy2
string <- c("Words","wo_rd","word4")
string[!=grep("_")]
?grepl
grep("_",string)
string[grep("_",string)]
string!grep("_",string)]
string[!grep("_",string)]
string[grep("_",string)]
1 = 2
(1 = 2)
1 == 2
1 != 2
grep("_",string)
string
grepl("_",string)
sub <- string[grepl("_",string) != FALSE]
sub
sub <- string[grepl("_",string) == FALSE]
sub
sub <- string[!="_"]
sub <- string["_"]
sub
a <- "Another, word, here, it, is"
a
a
?segment
read.csv(a)
read.csv(text=a)
read.csv(text=a)[0]
read.csv(text=a)[1]
read.csv(text=a)[,1]
read.csv(text=a.str)
read.csv(text=a,header=FALSE)
read.csv(text=a,header=FALSE)[1]
read.csv(text=a,header=FALSE)[2]
seg <- c("win","lose","tie")
for(i in seg)
seg = read.csv(text=a,header=FALSE)
seg = read.csv(text=a,header=FALSE)
seg
for(i in seg)
{}
length(seg)
segQuery[3]
segQuery[,3]
segQuery[;3]
seq[3]
seg
seg[3]
install.packages("swirl")
library(swirl)
swirl()
install.packages(ngramr)
install.packages("ngramr")
library(ngramr)
?ngramr
install.packages(ngramrr)
install.packages("ngramrr")
library(ngramrr)
?ngramrr
str <- "What was it exactly that she said that day"
ngramrr(str,ngmin = 1,ngmax=1)
?read
?read.txt
string <- read.table(http://www.textfiles.com/etext/FICTION/alice13a.txt, header = False)
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what = character)
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what = raw)
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt")
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what =list(Null, name = character()))
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what = list())
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",character(0))
head(x)
head(x,500)
tail(x)
object.size(x)
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what = list())
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",what = list())
x <- scan("http://www.textfiles.com/etext/FICTION/alice13a.txt",character(0))
head(x, 100)
tail(x, 42)
head(x, 42)
tail(x, 20)
?ngram
?ngramr
?ngramrr
install.packages("ngramrr")
install.packages("ngramrr")
x
ls
ls()
dir()
library(ngramrr)
ngramrr(x)
ngram <- ngramrr(x)
dim(ngram)
size(ngram)
head(ngram)
tail(ngram)
tail(ngram,200)
ngram <- ngramrr(x,ngmax =1)
tail(ngram)
ngram[,1]
ngram[1]
ngram[576]
ngram[2576]
head(ngram, 400)
1gram <- ngramrr(x, ngmin = 1, ngmax = 1)
Onegram <- ngramrr(x, ngmin = 1, ngmax = 1)
head(Onegram)
head(Onegram,100)
head(Onegram,400)
oneTwoThreeGram <- ngramrr(x, ngmin = 1, ngmax =3)
tail(oneTwoThreeGram, 400)
oneThruFiveGram <- ngramrr(x, ngmin = 1, ngmax =5)
oneThruFiveGram <- ngramrr(x, ngmin = 1, ngmax = 20)
oneThruFiveGram <- ngramrr(x, ngmin = 1, ngmax = 10)
oneThruFiveGram <- ngramrr(x, ngmin = 1, ngmax = 10)
?ngramr
library(ngramr)
?ngramr
library(ngram)
?ngram
unique(oneGram)
unique(Onegram)
aggregate(data.frame(count = Onegram)
)
aggregate(data.frame(count = Onegram), list(value = x), length)
frequency <- rowSums(Onegram)
install.packages('wordcloud')
table(Onegram)
frequency <- table(Onegram)
head(frequency)
frequency <- sort(frequency, decreasing =TRUE)
head(frequency)
head(frequency,20)
?ngramr
library(ngramr)
install.packages("ngramr")
library(ngramr)
phrases <- c("Coffee","Tea","Soda")
ggram(phrases)
install.packages("ngramr")
library(ngramr)
phrases <- c("Coffee","Tea","Biscuits")
ggram(phrases)
phrases <- c("Coffee","Tea","Soda")
ggram(phrases)
phrases <- c("Coffee","coffee")
ggram(phrases)
phrases <- c("Coffee","Tea","Soda",ignore_case=TRUE)
phrases <- c("Coffee","Tea","Soda")
ggram(phrases,ignore_case=TRUE)
phrases <- c("Soda","Pop","Coke","Soft Drink","Soda Pop")
ggram(phrases,ignore_case=TRUE)
R.Version()
install.packages("FastKNN")
library(FastKNN)
?FastKNN
?FastKNNN
library(FastKNN)
install.packages("FastKNN")
install.packages("FastKNN")
library(FastKNN)
?FastKNN
?k.nearest.neighbors
source('C:/Users/Dax/Dropbox/MachineLearning/CIS4930Project1Gerts.R')
View(training)
source('C:/Users/Dax/Dropbox/MachineLearning/CIS4930Project1Gerts.R')
irisSetup()
getwd()
x <- 1
y <- 2
rbind(x,y)
library(wordcloud)
library(RColorBrewer)
data <- read.table("NewWords.csv",header=TRUE,sep=",")
data2 <- data[1:100,]
wordcloud(data2$word,data2$use_count,scale=c(3,1),length = 20, random.order=FALSE,random.color=FALSE,colors=brewer.pal(5,"Dark2"),rot.per=0)
load("C:/Users/Dax/Desktop/yelp_dataset_challenge_academic_dataset/dataBusiness.RData")
load("C:/Users/Dax/Desktop/yelp_dataset_challenge_academic_dataset/dataCheckin.RData")
load("C:/Users/Dax/Desktop/yelp_dataset_challenge_academic_dataset/dataReview.RData")
load("C:/Users/Dax/Desktop/yelp_dataset_challenge_academic_dataset/dataTip.RData")
load("C:/Users/Dax/Desktop/yelp_dataset_challenge_academic_dataset/dataUser.RData")
head(dataBusiness)
head(dataCheckin)
summary(dataUser)
dim(dataBusiness)
?about
?summary
names(datBusiness)
names(dataBusiness)
head(dataBusiness$business_id)
head(dataBusiness$full_address)
head(dataBusiness$hours)
head(dataBusiness$open)
head(dataBusiness$categories)
names(dataBusiness)
names(dataBusiness$open)
head(dataBusiness$city)
head(dataBusiness$name)
head(dataBusiness$latitude)
head(dataBusiness$type)
head(dataBusiness$type,30)
head(dataBusiness$type,400)
names(dataBusiness$open)
names(dataBusiness)
names(dataBusiness$neighborhoods)
head(dataBusiness$neighborhoods)
head(dataBusiness$neighborhoods,30)
names(dataBusiness)
head(dataBusiness$type)
head(dataBusiness$attributes)
names(dataCheckin)
head(checkin_info)
head(dataCheckin$checkin_info)
dim(dataCheckin)
head(dataCheckin$type)
head(dataCheckin$business_id)
head(dataCheckin,30)
head(dataCheckin,1)
names(dataCheckin)
names(dataReview)
head(dataReview_text)
head(dataReview$text)
sum(is.na(dataReview$text))
sum(is.na(dataReview$type))
sum(is.na(dataReview$business_id))
sum(is.na(dataReview$user_id))
sum(is.na(dataReview$stars))
sum(is.na(dataReview$votes))
head(dataReview,1)
names(dataTip)
head(dataTip,2)
names(dataUser)
names(dataUser)
w <- "word"
strsplit(w,"")[[1]]
w <- "word"
strsplit(w,"")
#load packages
library(arules)
library(arulesViz)
#setup data (set all attributes to type 'factor')
titanic <- read.csv("titanic.csv",header=TRUE)
retail <- read.csv("retail.csv",header=TRUE)
retail <- retail[2:15]
retail[] <- lapply(retail,factor)
game <- read.csv("game_of_thrones.csv",header=TRUE)
game <- game[2:10]
game[] <- lapply(game,factor)
?is.subset
strsplit("thisstring")
strsplit("thisstring","")
?static_cast
View(dataReview)
word <- "wordstring"
word.split()
install.packages("qdap")
if (require(qdap) == FALSE) {
install.packages("qdap")
library(qdap)
}
if (require(caret) == FALSE) {
install.packages("caret")
library(caret)
}
?polarity
?with
string <- "test string good bad happy sad"
with(string, polarity(words, things))
with(string, polarity(dialogue, person))
g2 <- ggplot(data=dataReview,aes(dataReview[,1])) +
geom_histogram(col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple") +
g2
g2 <- ggplot(data=dataReview,aes(dataReview[,1])) +
geom_histogram(col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g2
g2 <- ggplot(data=dataReview,aes(dataReview[,1])) +
geom_bar(position = "fill",
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g1 <- ggplot(data=dataReview,aes(dataReview[,4]$funny)) +
geom_histogram(breaks=seq(1,6, by = 1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple") +
xlab("# of Stars") +
ggtitle("Histogram of 'Stars' Frequency")
g1
head(dataReview[,4])
head(dataReview[,1])
g1 <- ggplot(data=dataReview,aes(dataReview[,1])) +
geom_histogram(breaks=seq(1,6, by = 1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple") +
xlab("# of Stars") +
ggtitle("Histogram of 'Stars' Frequency")
g1
g1 <- ggplot(data=dataReview,aes(dataReview[,1]$funny)) +
geom_histogram(breaks=seq(1,6, by = 1),
col="black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple") +
xlab("# of Stars") +
ggtitle("Histogram of 'Stars' Frequency")
g1
g2 <- ggplot(data=dataReview,aes(dataReview[,1]$funny)) +
geom_bar(position = "fill",
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
names(dataReview[,1]$funny)
range(dataReview[,1]$funny)
g2 <- ggplot(data=dataReview,aes(dataReview[,1]$funny)) +
geom_bar(position = "dodge",
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g2 <- ggplot(data=dataReview,aes(dataReview[,1]$funny)) +
geom_histogram(breaks=seq(1,142,by=1),
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g2 <- ggplot(data=dataReview,aes(dataReview[,1]$funny,dataReview[,1]$useful,dataReview[,1]$cool)) +
geom_histogram(breaks=seq(1,142,by=1),
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g2 <- ggplot(data=dataReview,aes(c(dataReview[,1]$funny,dataReview[,1]$useful,dataReview[,1]$cool)) +
geom_histogram(breaks=seq(1,142,by=1),
col = "black",
aes(fill=..count..)) +
scale_fill_gradient("Count", low = "blue", high = "purple")
g2
g2 <- ggplot(data=dataReview,aes(c(dataReview[,1]$funny,dataReview[,1]$useful,dataReview[,1]$cool)) +
geom_histogram(breaks=seq(1,142,by=1),
col = "black",
aes(fill=..count..))
g2
g2 <- ggplot(data=dataReview,aes(c(dataReview[,1]$funny,dataReview[,1]$useful,dataReview[,1]$cool))) +
geom_histogram(breaks=seq(1,142,by=1),
col = "black",
aes(fill=..count..))
g2
g2 <- ggplot(data=dataReview[,1]) +
geom_histogram(aes(weights=count,fill=names(dataReview[,1])))
g2
g2 <- ggplot(data=dataReview[,1]) +
geom_histogram(aes(fill=names(dataReview[,1])))
g2
g2 <- ggplot(data=dataReview[,1]) +
geom_histogram(aes(x=names(dataReview[,1])))
g2
g2 <- ggplot(data=dataReview[,1]) +
geom_histogram(aes(x=names(dataReview[,1]))) +
scale_fill_brewer(palette="Set3") +
facet_wrap( ~ names(dataReview[,1]),ncol=1)
g2
?buildTwoCharacterFreqMatrix
library(devtools)
install.packages('devtool')
install.packages('devtools')
library(devtools)
find_rtools()
install.packages("Rtools")
find_rtools()
library(devtools)
build_github_devtools()
build_github_devtools()
install.packages("devtools",lib="~/R/lib")
install.packages("devtools",lib="~/R/lib")
setwd("C:/Users/Dax/Dropbox/DataMining/IMDB-Analysis")
source('C:/Users/Dax/Dropbox/DataMining/IMDB-Analysis/datasetCreation.r')
